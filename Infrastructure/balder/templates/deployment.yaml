apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "balder.fullname" . }}
  labels:
    {{- include "balder.labels" . | nindent 4 }}
spec:
  {{- if .Values.autoscaling.enabled }}
  scaleTargetRef:
    kind: ReplicaSet
    name: api
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
  {{- end }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "balder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "balder.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "balder.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostname: hostname
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
          env:
            - name: POSTGRESCONNECTIONSTRING
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: postgresconnectionstring
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: aspnetcore_environment
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: tz
            - name: NLS_TIMESTAMP_FORMAT
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: nls_timestamp_format
            - name: REKOGNITION_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: rekognition_service_url
            - name: SANS_URL
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: sans_url
            - name: RAVENDB_URLS
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: ravendb_urls
            - name: RAVENDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: ravendb_database
            - name: SCRAPPER_URL
              valueFrom:
                configMapKeyRef:
                  name: balder-configurations
                  key: scrapper_url
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: aws_secret_access_key
            - name: AWS_DEFAULT_REGION
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: aws_default_region
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: minio_endpoint
            - name: MINIO_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: minio_access_key_id
            - name: MINIO_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: minio_secret_access_key
            - name: BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: bucket_name
            - name: STORAGE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: delta-configurations
                  key: storage_type
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
